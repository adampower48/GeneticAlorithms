/**
* Useful JS functions from cookie clicker site
* ============================================
* Game.Objects    ->  Array of all the buildings & their info
* Game.Objects["Cursor"].buy(x)   -> Buys x amount of Cursors
* Game.Objects["Cursor"].sell(x)  -> Sells x amount of Cursors
* Game.Objects["Cursor"].getPrice()  -> Gets current price of Cursor
* Game.cookies    -> Float of current amount of cookies
* Game.UpgradesById[id].buy()     -> Buys upgrade of given id (each is unique)
* Game.Objects["Cursor"].amount   -> Amount of owned Cursors
*
* ===============================================
* Current JS code
* ===============================================
**/
var buy = function(action) {

    if (action[0] === 0) {
        var building = action[1];
        if (Game.cookies >= Game.Objects[buy_names[building]].getPrice()) {
            Game.Objects[buy_names[building]].buy(1);
            console.log(action);
            return true;
        } else {
            return false;
        }

    } else if (action[0] === 1) {
        upgrade_id = upgrade_ids[action[1]][action[2]];

        if (Game.cookies >= Game.UpgradesById[upgrade_id].getPrice()) {
            Game.UpgradesById[upgrade_id].buy();
            console.log(action);
            return true;
        } else {
            return false;
        }



    } else if (action[0] === 2) {
        var building = action[1];
        if (Game.Objects[buy_names[building]].amount > 0) {
            Game.Objects[buy_names[building]].sell(1);
            console.log(action);
            return true;
        } else {
            return false;
        }


    }
};

var action_order = [[0, 0], [0, 0], [0, 0], [0, 0], [0, 1], [0, 1], [0, 1], [0, 1], [1, 0, 0], [0, 0], [0, 1], [0, 1], [0, 1], [1, 1, 0], [0, 1], [0, 1], [0, 2], [0, 0], [0, 1], [0, 0], [0, 1], [0, 0], [0, 0], [0, 0], [1, 0, 1], [0, 0], [0, 0], [0, 0], [0, 0], [0, 2], [0, 2], [0, 2], [1, 1, 1], [0, 2], [1, 2, 0], [0, 2], [0, 2], [0, 2], [0, 1], [0, 2], [0, 2], [0, 3], [0, 2], [0, 2], [0, 3], [1, 2, 1], [0, 2], [0, 1], [0, 2], [0, 2], [0, 2], [0, 3], [0, 1], [0, 2], [0, 1], [0, 2], [0, 3], [0, 2], [0, 3], [0, 3], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [1, 3, 0], [0, 3], [0, 3], [0, 1], [0, 3], [0, 2], [0, 3], [0, 2], [0, 1], [0, 2], [0, 1], [0, 1], [0, 4], [1, 3, 1], [0, 3], [0, 3], [0, 3], [0, 1], [0, 3], [0, 4], [0, 1], [0, 3], [0, 2], [0, 3], [0, 3], [1, 2, 2], [0, 1], [0, 2], [0, 1], [0, 2], [0, 1], [0, 2], [0, 0], [0, 2], [0, 2], [0, 1], [0, 1], [0, 1], [0, 1], [1, 15, 0], [0, 3], [0, 4], [0, 1], [1, 15, 1], [0, 1], [0, 2], [0, 1], [0, 3], [0, 3], [0, 1], [0, 1], [0, 2], [0, 1], [0, 3], [0, 4], [0, 4], [0, 2], [0, 3], [0, 4], [0, 1], [0, 2], [0, 3], [0, 4], [0, 2], [0, 4], [1, 4, 0], [0, 4], [0, 4], [0, 5], [0, 4], [0, 5], [0, 4], [0, 1], [0, 1], [1, 3, 2], [0, 1], [0, 3], [0, 3], [0, 3], [0, 1], [0, 3], [0, 1], [0, 1], [0, 3], [0, 1], [0, 1], [0, 2], [0, 1], [0, 3], [0, 5], [0, 4], [0, 0], [0, 2], [0, 3], [0, 1], [0, 2], [0, 4], [0, 1], [0, 3], [0, 1], [0, 1], [0, 2], [1, 1, 2], [0, 1], [0, 2], [0, 2], [0, 1], [0, 2], [2, 0], [0, 0], [0, 0], [1, 4, 1], [0, 4], [0, 4], [0, 5], [0, 4], [2, 1], [0, 4], [0, 4], [0, 5], [0, 5], [1, 5, 0], [2, 1], [2, 1], [2, 1], [2, 1], [2, 1], [0, 5], [0, 5], [0, 5], [0, 4], [0, 5], [0, 3], [0, 4], [0, 3], [0, 3], [2, 1], [0, 0], [0, 2], [1, 0, 2], [0, 0], [0, 0], [0, 2], [0, 0], [0, 0], [0, 0], [0, 0], [0, 2], [0, 0], [1, 15, 2], [0, 4], [0, 5], [0, 4], [0, 5], [0, 5], [0, 6], [0, 4], [0, 3], [0, 4], [0, 0], [0, 5], [2, 1], [0, 3], [0, 4], [0, 5], [0, 2], [0, 3], [0, 4], [0, 4], [0, 3], [0, 3], [0, 2], [0, 2], [0, 3], [0, 0], [0, 2], [0, 2], [0, 2], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]];
var buy_names = ['Cursor', 'Grandma', 'Farm', 'Mine', "Factory", "Bank", "Temple"];
var upgrade_ids = [
    [0, 1, 2, 3, 4, 5, 6, 43, 82, 109, 188, 189],
    [7, 8, 9, 44, 110, 192, 294, 307, 428],
    [10, 11, 12, 45, 111, 193, 295, 208, 429],
    [16, 17, 18, 47, 113, 195, 296, 309, 430],
    [13, 14, 15, 46, 112, 194, 297, 310, 431],
    [232, 233, 234, 235, 236, 237, 298, 311, 432],
    [238, 239, 240, 241, 242, 243, 299, 312, 433],
    [244, 245, 246, 247, 248, 249, 300, 313, 434],
    [19, 20, 21, 48, 114, 196, 301, 314, 435],
    [22, 23, 24, 49, 115, 197, 302, 315, 436],
    [25, 26, 27, 50, 116, 198, 303, 316, 437],
    [28, 29, 30, 51, 117, 199, 304, 317, 438],
    [99, 100, 101, 102, 118, 200, 305, 318, 439],
    [175, 176, 177, 178, 179, 201, 306, 319, 440],
    [416, 417, 418, 419, 420, 421, 422, 423, 441],
    [57, 58, 59, 250, 251, 252, 60, 61, 62, 63, 103, 180, 415]
];

var i = 0;
var check = function() {
	if (i >= action_order.length) {
	    console.log("DONE");
		return;
	}
	if (buy(action_order[i])) {
		i++;
	}

	setTimeout(check, 1000);
};

Game.Reset(true);
Game.cookies = 15;
check();
