/**
* Useful JS functions from cookie clicker site
* ============================================
* Game.Objects    ->  Array of all the buildings & their info
* Game.Objects["Cursor"].buy(x)   -> Buys x amount of Cursors
* Game.Objects["Cursor"].sell(x)  -> Sells x amount of Cursors
* Game.Objects["Cursor"].getPrice()  -> Gets current price of Cursor
* Game.cookies    -> Float of current amount of cookies
* Game.UpgradesById[id].buy()     -> Buys upgrade of given id (each is unique)
*
* ===============================================
* Current JS code
* ===============================================
**/
var buy = function(action) {

    if (action[0] === 0) {
        var building = action[1];
        if (Game.cookies >= Game.Objects[buy_names[building]].getPrice()) {
            Game.Objects[buy_names[building]].buy(1);
            console.log(action);
            return true;
        } else {
            return false;
        }

    } else if (action[0] === 1) {
        upgrade_id = upgrade_ids[action[1]][action[2]];

        if (Game.cookies >= Game.UpgradesById[upgrade_id].getPrice()) {
            Game.UpgradesById[upgrade_id].buy();
            console.log(action);
            return true;
        } else {
            return false;
        }



    }
};

var action_order = [(0, 0), (0, 0), (0, 0), (0, 0), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 2), (0, 2), (0, 0), (0, 1), (0, 1), (0, 1), (0, 0), (0, 0), (0, 0), (0, 1), (0, 0), (0, 0), (0, 2), (0, 1), (1, 1, 0), (1, 1, 1), (0, 1), (0, 1), (0, 1), (0, 2), (0, 2), (0, 2), (1, 2, 0), (0, 2), (0, 2), (0, 2), (0, 3), (0, 2), (0, 2), (0, 2), (0, 3), (1, 2, 1), (0, 1), (0, 2), (0, 2), (0, 2), (0, 2), (0, 1), (0, 3), (0, 2), (0, 2), (0, 1), (0, 1), (0, 3), (0, 2), (0, 1), (0, 3), (0, 2), (0, 3), (0, 2), (0, 3), (0, 2), (0, 3), (0, 3), (0, 1), (0, 1), (0, 2), (0, 1), (0, 2), (0, 1), (0, 1), (0, 2), (0, 0), (0, 2), (1, 0, 0), (0, 1), (0, 2), (0, 0), (1, 3, 0), (0, 3), (0, 3), (0, 4), (0, 4), (0, 3), (0, 3), (1, 3, 1), (0, 0), (0, 3), (0, 3), (0, 3), (0, 3), (0, 4), (0, 3), (0, 3), (0, 4), (0, 1), (1, 0, 1), (0, 3), (0, 4), (0, 3), (0, 4), (0, 4), (0, 3), (0, 3), (0, 4), (0, 3), (0, 2), (0, 1), (0, 1), (0, 1), (0, 2), (0, 1), (0, 2), (0, 1), (0, 1), (1, 4, 0), (0, 2), (0, 3), (0, 4), (0, 1), (0, 4), (0, 4), (0, 5), (0, 5), (0, 0), (0, 0), (0, 4), (0, 4), (0, 5), (0, 4), (0, 4), (0, 3), (0, 3), (0, 2), (0, 0), (0, 0), (0, 0), (0, 2), (0, 0), (0, 0), (0, 2), (0, 0), (0, 1), (0, 0), (0, 0), (0, 1), (0, 1), (0, 0), (0, 0), (0, 1), (0, 1), (0, 1), (1, 4, 1), (0, 3), (0, 2), (0, 1), (0, 4), (0, 4), (0, 4), (0, 0), (0, 5), (0, 0), (0, 4), (0, 4), (0, 0), (0, 5), (0, 4), (0, 3), (0, 3), (0, 0), (0, 2), (0, 0), (0, 1), (0, 1), (0, 0), (0, 1), (0, 1), (0, 5), (0, 5), (0, 0), (0, 5), (0, 5), (0, 5), (0, 3), (0, 0), (0, 2), (0, 2), (0, 0), (0, 2), (0, 0), (0, 2), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 1), (0, 1), (0, 0), (0, 0), (0, 1), (0, 1), (0, 0), (1, 5, 0), (0, 4), (0, 3), (0, 2), (0, 0), (0, 1), (0, 5), (0, 5), (0, 0), (0, 4), (0, 4), (0, 4), (0, 4), (0, 3), (0, 2), (0, 0), (0, 2), (0, 0), (0, 1), (0, 0), (0, 1), (0, 0), (0, 0)];
var buy_names = ['Cursor', 'Grandma', 'Farm', 'Mine', "Factory", "Bank", "Temple"];
var upgrade_ids = [
    [0, 1],
    [7, 8],
    [10, 11],
    [16, 17],
    [13, 14],
    [232, 233],
    [238, 239],
    [244, 245],
    [19, 20],
    [22, 23],
    [25, 26],
    [28, 29],
    [99, 100],
    [175, 176],
    [416, 417]
];

var i = 0;
var check = function() {
	if (i >= action_order.length) {
		return;
	}
	if (buy(action_order[i])) {
		i++;
	}

	setTimeout(check, 1000);
};

Game.Reset(true);
Game.cookies = 15;
check();
